//
//  LoginViewController.swift
//  AirBazGeneric
//
//  Created Usuario Phinder 2020 on 30/04/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import WalletSDK

class LoginViewController: UIViewController, LoginViewProtocol {

	var presenter: LoginPresenterProtocol?
    
    //MARK: - @IBOutlets
    @IBOutlet weak var nameTextField: UITextField!
    @IBOutlet weak var surnameTextField: UITextField!
    @IBOutlet weak var accountNumberTextField: UITextField!
    @IBOutlet weak var requiredNameLabel: UILabel!
    @IBOutlet weak var requiredApPatLabel: UILabel!
    @IBOutlet weak var requiredAccountNumberLabel: UILabel!
    @IBOutlet weak var discoverButton: UIButton!
    @IBOutlet weak var colorSegmentedControl: UISegmentedControl!
    
    //MARK: - Properties
    let colors: [Color] = [Color(hex: "#006242", color: UIColor(red: 0.00, green: 0.38, blue: 0.26, alpha: 1.00)),
                           Color(hex: "#283F8F", color: UIColor(red: 0.16, green: 0.25, blue: 0.56, alpha: 1.00)),
                           Color(hex: "#FFDC26", color: UIColor(red: 1.00, green: 0.86, blue: 0.15, alpha: 1.00))]

    //MARK: - Life cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        
        setView()
    }
    
    //MARK: - @IBActions
    @IBAction func hideKeyBoardInTap(_ sender: UITapGestureRecognizer) {
        hideKeyboard()
    }
    
    @IBAction func discoverAction(_ sender: UIButton) {
        hideKeyboard()
        presenter?.checkTextFields(nameText: nameTextField.text, surnameText: surnameTextField.text, accountNumber: accountNumberTextField.text)
    }
    
    @available(iOS 13.0, *)
    @IBAction func segmentedControlValueChanged(_ sender: UISegmentedControl) {
        sender.selectedSegmentTintColor = colors[sender.selectedSegmentIndex].color
    }

}

//MARK: - UITextFieldDelegate
extension LoginViewController: UITextFieldDelegate {
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        if textField == accountNumberTextField {
            guard let textFieldText = textField.text, let rangeOfTextToReplace = Range(range, in: textFieldText) else { return false }
            let substringToReplace = textFieldText[rangeOfTextToReplace]
            let count = textFieldText.count - substringToReplace.count + string.count
            return count <= 14
        }
        
        return true
    }
    
    func textFieldDidBeginEditing(_ textField: UITextField) {
        switch textField {
        case nameTextField:
            ViewAnimation.init(y: -50, viewMove: self.view).animation()
        case surnameTextField:
            ViewAnimation.init(y: -100, viewMove: self.view).animation()
        case accountNumberTextField:
            ViewAnimation.init(y: -150, viewMove: self.view).animation()
        default:
            break
        }
    }
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        switch textField {
        case nameTextField:
            surnameTextField.becomeFirstResponder()
        case surnameTextField:
            accountNumberTextField.becomeFirstResponder()
        default:
            hideKeyboard()
        }
        
        return true
    }
    
}

//MARK: - Presenter Methods
extension LoginViewController {
    func nameIsEmpty(_ isEmpty: Bool) {
        requiredNameLabel.isHidden = isEmpty ? false : true
    }
    
    func surnameIsEmpty(_ isEmpty: Bool) {
        requiredApPatLabel.isHidden = isEmpty ? false : true
    }
    
    func accountNumberIsEmpty(_ isEmpty: Bool) {
        requiredAccountNumberLabel.isHidden = isEmpty ? false : true
    }
    
    func areTextFieldsWithText(name: String, surname: String, accountNumber: String) {
        let color = colors[colorSegmentedControl.selectedSegmentIndex]
        let initView = InitRouter.createModule(name: name, apPat: surname, accountNumber: accountNumber, color: color)
        self.navigationController?.pushViewController(initView, animated: true)
    }
}

//MARK: - Private Methods
extension LoginViewController {
    private func setView() {
        colorSegmentedControl.setTitleTextAttributes([NSAttributedString.Key.foregroundColor: UIColor.white],
                                                     for: UIControl.State.selected)
        
        discoverButton.setCorner(cornerRadius: 10.0)
        nameTextField.delegate = self
        surnameTextField.delegate = self
        accountNumberTextField.delegate = self
    }
    
    private func hideKeyboard() {
        nameTextField.resignFirstResponder()
        surnameTextField.resignFirstResponder()
        accountNumberTextField.resignFirstResponder()
        ViewAnimation.init(y: 0, viewMove: self.view).animation()
    }
}
