//
//  BAZHomeViewController.swift
//  AirBazGeneric
//
//  Created Usuario Phinder 2020 on 21/05/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import UserNotificationsUI
import WalletSDK

class BAZHomeViewController: UIViewController, BAZHomeViewProtocol {

    var presenter: BAZHomePresenterProtocol?
    
    //MARK: - @IBOutlets
    @IBOutlet weak var passwordButton: UIButton!
    @IBOutlet weak var menuStackView: UIStackView!
    
    //MARK: - Properties
    var walletInit: WalletSDKInit?
    var submitAction: UIAlertAction!
    
    //MARK: - Life cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        
        setView()
    }
    
    //MARK: - Methods
    private func setView() {
        passwordButton.layer.borderWidth = 4.0
        passwordButton.layer.borderColor = UIColor(red: 0.09, green: 0.58, blue: 0.28, alpha: 1.0).cgColor
        passwordButton.layer.cornerRadius = 35.0
        menuStackView.arrangedSubviews.forEach({ $0.layer.cornerRadius = $0.frame.width / 2 })
        
        
    }
    
    func sendNotification(body: String) {
        let notificationContent = UNMutableNotificationContent()
        notificationContent.body = body

        let request = UNNotificationRequest(identifier: "testNotification",
                                            content: notificationContent,
                                            trigger: nil)
        
        UNUserNotificationCenter.current().add(request) { (error) in
            if let error = error {
                print("Notification Error: ", error)
            }
        }
    }
    
    deinit {
        walletInit?.stopOnline()
//        walletInit?.stopOffline()
    }
    
    //MARK: - @IBActions
    @IBAction func goToPayment(_ sender: UIButton) {
        let hasAlreadyLaunched = UserDefaults.standard.bool(forKey: "hasAlreadyLaunched")
        
        if hasAlreadyLaunched {
            if walletInit != nil {
                let view = WhereDoRouter.createModule()
                self.navigationController?.pushViewController(view, animated: true)
                return
            } else {
                let name = UserDefaults.standard.string(forKey: "name")!
                let id = UserDefaults.standard.string(forKey: "id")!
                let nameSplit = name.split(separator: " ")
                let phone = UserDefaults.standard.string(forKey: "phone")!
                let accountNumber = UserDefaults.standard.string(forKey: "accountNumber")!
                let color = UIColor.hexStringToUIColor(hex: "#4EBC8A")
                
                self.walletInit = WalletSDKInit.shared
                
                self.walletInit!.setupData(accountNumber: accountNumber, name: String(nameSplit[0]), apPat: String(nameSplit[1]), phone: phone, latitude: 37.4219983, longitude: -122.084, radioColor: color, selfColor: color,env: .bazProd, onError: {
                    errorCode in
                    
                    print("=============ERROR============")
                    self.sendNotification(body: "Error codigo: \(errorCode)")
                    
                }) {
                    text in
                    
                    return text.replacingOccurrences(of: "%", with: "")
                }
                
                self.walletInit!.onMessage = {
                    [weak self] (message, quantity) in
                    guard let self = self else { return }
                
                    var newBalance = UserDefaults.standard.double(forKey: "balance")
                    newBalance += quantity
                    UserDefaults.standard.setValue(newBalance, forKey: "balance")
                    self.sendNotification(body: message)
                }
                
           
                self.walletInit!.startOnline()
    
                
                let view = WhereDoRouter.createModule()
                self.navigationController?.pushViewController(view, animated: true)
                return
            }
        }
        
        let alert = UIAlertController(title: "Agregue su nombre y su teléfono", message: nil, preferredStyle: .alert)
        
        alert.addTextField()
        alert.addTextField()
        alert.addTextField()
        alert.addTextField()
        
        let nameField = alert.textFields![0]
        let apPatField = alert.textFields![1]
        let phoneField = alert.textFields![2]
        let accountNumberField = alert.textFields![3]
        
        nameField.placeholder = "Nombre"
        apPatField.placeholder = "Apellido Paterno"
        phoneField.placeholder = "Teléfono"
        accountNumberField.placeholder = "Número de Cuenta"
        
        let cancelAction = UIAlertAction(title: "Cancelar", style: .default) { [unowned alert] _ in
            alert.dismiss(animated: true)
        }
        
        let id: String = "\(Int.random(in: 1...1000))"
        UserDefaults.standard.setValue(750.00, forKey: "balance")
        UserDefaults.standard.setValue(id, forKey: "id")
        
        let submitAction = UIAlertAction(title: "Entrar", style: .default) { _ in
            
            let name = nameField.text ?? ""
            let apPat = apPatField.text ?? ""
            let phone = phoneField.text ?? ""
            let accountNumber = accountNumberField.text ?? ""
            
            if name.trimmingCharacters(in: .whitespacesAndNewlines) != "" && apPat.trimmingCharacters(in: .whitespacesAndNewlines) != "" &&
                phone.trimmingCharacters(in: .whitespacesAndNewlines) != "" {
                
                let fullName = name + " " + apPat
                
                UserDefaults.standard.setValue(true, forKey: "hasAlreadyLaunched")
                UserDefaults.standard.setValue(fullName, forKey: "name")
                UserDefaults.standard.setValue(phone, forKey: "phone")
                UserDefaults.standard.setValue(accountNumber, forKey: "accountNumber")
                let color = UIColor.hexStringToUIColor(hex: "#4EBC8A")
                
                self.walletInit = WalletSDKInit.shared
                
                self.walletInit!.setupData(accountNumber: accountNumber, name: name, apPat: apPat, phone: phone, latitude: 37.4219983, longitude: -122.084, radioColor: color, selfColor: color, env: .bazProd, onError: {
                    errorCode in
                    
                    print("=============ERROR============")
                    self.sendNotification(body: "Error codigo: \(errorCode)")
                    
                    
                }) {
                    text in
                    
                    return text.replacingOccurrences(of: "%", with: "")
                }
                
                self.walletInit!.onMessage =  {
                    [weak self] (message, quantity) in
                    guard let self = self else { return }
                
                    var newBalance = UserDefaults.standard.double(forKey: "balance")
                    newBalance += quantity
                    UserDefaults.standard.setValue(newBalance, forKey: "balance")
                    self.sendNotification(body: message)
                }
                
                self.walletInit!.startOnline()

                let view = WhereDoRouter.createModule()
                self.navigationController?.pushViewController(view, animated: true)
            }
        }
        
        alert.addAction(cancelAction)
        alert.addAction(submitAction)
        present(alert, animated: true)
    }
}
