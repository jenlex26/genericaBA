//
//  FinalDetailViewController.swift
//  AirBazGeneric
//
//  Created Branchbit on 21/05/21.
//  Copyright © 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import AirBaz
import Alamofire

class FinalDetailViewController: UIViewController, FinalDetailViewProtocol {

	var presenter: FinalDetailPresenterProtocol?
    
    //MARK: - @IBOutlets
    @IBOutlet weak var amountLabel: UILabel!
    @IBOutlet weak var dateLabel: UILabel!
    @IBOutlet weak var readyButton: UIButton!
    @IBOutlet weak var destinationNameLabel: UILabel!
    
    //MARK: - Properties
    var walletInit: AirBazFacade!

    //MARK: - Life cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        
        setView()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        
        let date = Date()
        let formatter = DateFormatter()
        
        formatter.dateFormat = "dd/MMM/yyyy HH:mm"
        
        let formattedDate = formatter.string(from: date)
        
        let amount = UserDefaults.standard.double(forKey: "amount")
        let formattedAmount = "$\(String(format: "%.2f", amount))"
        
        let name = UserDefaults.standard.string(forKey: "name")!
        let nameSplit = name.split(separator: " ")
        let formattedName = String(nameSplit[0]) + " " + String(nameSplit[1].first!) + "."
       
        let nameDestination = UserDefaults.standard.string(forKey: "destinationName")!
        let nameDestinationSplit = nameDestination.split(separator: " ")
        let formattedNameDestination = String(nameDestinationSplit[0]) + " " + String(nameDestinationSplit[1].first!) + "."
        
        let phone = UserDefaults.standard.string(forKey: "destinationPhoneNumber")!
        let ownPhoneNumber = UserDefaults.standard.string(forKey: "phone")!
        
        let message = "Recibiste \(formattedAmount) de \(formattedName) \(ownPhoneNumber) el \(formattedDate). Dudas 55 5447 8810 Banco Azteca"
        let ownMessage = "Enviaste a celular \(formattedAmount) a \(formattedNameDestination) \(phone)  el \(formattedDate) . Dudas 55 5447 8810 Banco Azteca"
        
        let destinationNumber = UserDefaults.standard.string(forKey: "destinationNumber")!
        
        self.sendNotification(body: ownMessage)
        
        if Reachability.isConnectedToNetwork() {
            let myAccount = UserDefaults.standard.string(forKey: "accountNumber")!
            makeTransfer(amount: amount, accountToTransfer: destinationNumber, myAccountNumber: myAccount)
        } else {
//            walletInit.sendMessage(message: message, quantity: amount, accountToTransfer: destinationNumber)
        }
    }
    
    //MARK: - Methods
    private func setView() {
        readyButton.layer.cornerRadius = 30.0
        
        let dateFormatter = DateFormatter()
        dateFormatter.dateFormat = "dd/MMM/yyyy HH:mm"
        dateLabel.text = dateFormatter.string(from: Date())
        
        let amount = UserDefaults.standard.double(forKey: "amount")
        amountLabel.attributedText = "$\(String(format: "%.2f", amount))".priceStyle(fontSize: 32.0, weight: .medium)
        
        let destinationName = UserDefaults.standard.string(forKey: "destinationName")!
        let nameSplit = destinationName.split(separator: " ")
        destinationNameLabel.text = String(nameSplit[0]) + " " + String(nameSplit[1].first!) + "."
    }
    
    func sendNotification(body: String) {
        let notificationContent = UNMutableNotificationContent()
        notificationContent.body = body

        let request = UNNotificationRequest(identifier: "testNotification",
                                            content: notificationContent,
                                            trigger: nil)
        
        UNUserNotificationCenter.current().add(request) { (error) in
            if let error = error {
                print("Notification Error: ", error)
            }
        }
    }
    
    //MARK: - @IBActions
    @IBAction func readyAction(_ sender: UIButton) {
        let amount = UserDefaults.standard.double(forKey: "amount")
        let balance = UserDefaults.standard.double(forKey: "balance")
        
        let newBalance = balance - amount
        UserDefaults.standard.setValue(newBalance, forKey: "balance")
        self.navigationController?.popToRootViewController(animated: true)
    }
    
    func makeTransfer(amount: Double, accountToTransfer: String, myAccountNumber: String) {
        let url = "https://dev-captacion.bienestarazteca.com/captacion/traspaso"
        let formattedAmount: String = String(format: "%016.2f", amount)
        let parameters: [String: Any] = ["monto": formattedAmount,
                                         "cuentaOperacionRetiro": myAccountNumber,
                                         "codigoDivisa": "MXP",
                                         "codigoOperacionDeposito": "160",
                                         "descripcionOperacionRetiro": "RETIRO PRUEBA AIRBAZ",
                                         "cuentaOperacionDeposito": accountToTransfer,
                                         "descripcionOperacionDeposito": "DESPOSITO PRUEBA AIRBAZ",
                                         "codigoOperacionRetiro": "169",
                                         "campoLibre": ""]
        
        let manager = Alamofire.SessionManager.default
        manager.session.configuration.timeoutIntervalForRequest = 30
        
        let headers: HTTPHeaders = ["Content-Type": "application/json",
                                    "X-Custom-Header": "application/json;charset=UTF-8"]
        
        manager.request(url, method: .post, parameters: parameters, encoding: JSONEncoding.default, headers: headers).responseJSON { (response) in
            
            switch response.result {
            case .success:
                if response.response?.statusCode == 200, let data = response.data {
                    do {
                        let json = try JSONSerialization.jsonObject(with: data, options: .fragmentsAllowed) as? [String: Any]
                        if let message = json?["mensaje"] as? String, message == "Operacion exitosa." {
                            
                        } else {
                            
                        }
                    } catch {
                        
                    }
                } else {
                    
                }
            case .failure:
                break
            @unknown default:
                break
            }
        }
    }

}
