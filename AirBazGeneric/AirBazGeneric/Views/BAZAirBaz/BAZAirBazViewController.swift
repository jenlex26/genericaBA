//
//  BAZAirBazViewController.swift
//  AirBazGeneric
//
//  Created Usuario Phinder 2020 on 21/05/21.
//  Copyright ¬© 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catal√°n @JuanpeCMiOS
//

import UIKit
import AirBaz

class BAZAirBazViewController: UIViewController, BAZAirBazViewProtocol {

	var presenter: BAZAirBazPresenterProtocol?

    //MARK: - @IBOutlets
    @IBOutlet weak var containerView: UIView!
    @IBOutlet weak var stepViewWidth: NSLayoutConstraint!
    @IBOutlet weak var descriptionLbl: UILabel!
    
    //MARK: - Properties
    var walletInit: AirBazFacade = AirBazFacade()
    var airBazView: AirBazViewController?
    
    //MARK: - Life cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        
        setView()
        descriptionLbl.text = "serviceTypes: \(walletInit.serviceType)"
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        
        animateStepView()
        walletInit.endSession()
//        walletInit.endSession()
    }
    
    //MARK: - Methods
    private func setView() {
        airBazView = walletInit.renderRadar(labelColor: UIColor.blue, delegate: self) as? AirBazViewController

        walletInit.delegateConnection = self
        walletInit.showHelpText = false
        walletInit.seeMorePeopleText = "Wachar mas"
        walletInit.showInitialsCircle = false
        walletInit.showLocationText = false
        addChild(airBazView!)
        airBazView!.view.frame = containerView.bounds
        containerView.addSubview(airBazView!.view)
    }
    
    private func animateStepView() {
        view.layoutIfNeeded()
        stepViewWidth.constant = self.view.frame.width * 0.25
        UIView.animate(withDuration: 1.0, animations: {
            self.view.layoutIfNeeded()
        })
    }
    
    @IBAction func goBack(_ sender: UIButton) {
        self.navigationController?.popViewController(animated: true)
    }
    
    @IBAction func root(_ sender: UIButton) {
        self.navigationController?.popToRootViewController(animated: true)
    }

    @IBAction func onClickChangeAccount(_ sender: Any) {
        changeAccount(accountNumber: "1234567890")
//        changeLatAndLong(latitude: 19.0489671, longitude: -99.536513)
    }
    
    func changeAccount(accountNumber: String) {
        airBazView!.changeAccountNumber(accountNumber: accountNumber)
       // walletInit.changeAccountNumber(accountNumber: accountNumber)
    }
    
    func changeLatAndLong(latitude: Double, longitude: Double) {
//        walletInit.changeLatAndLong(latitude: latitude, longitude: longitude)
        airBazView!.changeLatAndLong(latitude: latitude, longitude: longitude)
    }
    
}

//MARK: - WalletSDKDelegate
extension BAZAirBazViewController: AirbazDelegate {
    func decryptText(_ text: String) -> String {        
        return text.replacingOccurrences(of: "%", with: "")
    }
    
    func onError(_ errorCode: Int) {
        print("=============ERROR============")
        self.sendNotification(body: "Error codigo: \(errorCode)")
    }
    

    func sucessAtFindingDevice(name: String, apPat: String, phone: String,  accountNumber: String) {
        let completeName = name + " " + apPat
        UserDefaults.standard.setValue(completeName, forKey: "destinationName")
        UserDefaults.standard.setValue(accountNumber, forKey: "destinationNumber")
        UserDefaults.standard.setValue(phone, forKey: "destinationPhoneNumber")
        
        Self.showSpinner()
        
        DispatchQueue.main.asyncAfter(deadline: .now() + 0.5 , execute: {
            self.walletInit.inviteSession(accountNumber: accountNumber)
        })
    }
    
    func helpAction() {
        
    }
}

//MARK: - AirBazConnectionDelegate
extension BAZAirBazViewController: AirBazSessionDelegate {
    func onConnection() {
        print("AIRBAZGENERIC: Connected :)")
        
        BAZAirBazViewController.hideSpinner()
 
        let view = BAZPaymentRouter.createModule()
        self.navigationController?.pushViewController(view, animated: true)
    }
    
    func onDisconnect() {
        self.navigationController?.popToViewController(self, animated: true)
        sendNotification(body: "Desconectado ‚ò†Ô∏è")
    }
    
    func onError(error: Error) {
        BAZAirBazViewController.hideSpinner()
        
        switch error {
        case AirBazSessionError.notFound:
            sendNotification(body: "No esta offline üì∂")
        case AirBazSessionError.alredyConnected:
            sendNotification(body: "Ya se encuentra conectado ‚õîÔ∏è")
        default:
            break
        }
        
        print("AIRBAZGENERIC: Error :( \(error.localizedDescription)")
    }
    
    func onMessage(message data: Data) {
        print("AIRBAZGENERIC: Message nwn")

        let convertedString = String(data: data, encoding: String.Encoding.utf8)
        debugPrint("AIRBAZGENERIC: \(convertedString ?? "defaultvalue")")
        
        let decoder = JSONDecoder()
        
        guard let response = try? decoder.decode(Message.self, from: data) else {
            print("AIRBAZGENERIC: Bad Message :c")
            return
        }
        
        print("AIRBAZGENERIC: \(response)")
        
        
        
        sendNotification(body: "\(response.text ?? "No hay un mensaje üö¨") ")
    }
}

extension BAZAirBazViewController {
    private func sendNotification(body: String) {
        let notificationContent = UNMutableNotificationContent()
        notificationContent.body = body

        let request = UNNotificationRequest(identifier: "testNotification",
                                            content: notificationContent,
                                            trigger: nil)
        
        UNUserNotificationCenter.current().add(request) { (error) in
            if let error = error {
                print("Notification Error: ", error)
            }
        }
    }
}
